server:
  port:
    9090

logging:
  level:
    com.solvd.micro: DEBUG
  file:
    name: ticket-service.log
    path: /

spring:
  config:
    import: optional:file:.env[.properties]
  data:
    mongodb:
      uri: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_DOMAIN}:27017/tickets?authSource=admin
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}
  r2dbc:
    url: r2dbc:postgresql://${POSTGRES_DOMAIN}:5432/postgres?currentSchema=tickets_es
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver: org.postgresql.Driver
  jackson:
    default-property-inclusion: non_null
  application:
    name: TICKET-SERVICE
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}:9092
    properties:
      spring:
        json:
          trusted:
            packages: com.solvd.micro9.tickets.web.dto
    consumer:
      topic: users
      group-id: ticketGroup
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            value:
              default:
                type: com.solvd.micro9.tickets.domain.es.Es
    partitions: 3
    replicas: 1
    producer:
      topic: events
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            add:
              type:
                headers: false